local rtatlas = require "runtime-atlas.runtime-atlas"

function init(self)
	local atlas_entries = {
		"example/assets/images/image0.png", "example/assets/images/image1.png", "example/assets/images/image2.png",
		"example/assets/images/image3.png", "example/assets/images/image4.png", "example/assets/images/image5.png",
		"example/assets/images/image6.png", "example/assets/images/image7.png", "example/assets/images/image8.png",
		"example/assets/images/image9.png", "example/assets/images/image10.png", "example/assets/images/image11.png",
		"example/assets/images/image12.png", "example/assets/images/image13.png"

	}
	
	-- We create our atlas with the given images
	local atlas_id = rtatlas.pack("example", atlas_entries, 256, 256)

	-- Setting the name in a variable and reusing that makes sure we won't mistype it
	local name_of_our_new_texture_resource = "example"
	
	-- We add a texture named 'example' to our guis texture resources
	go.set("#gui", "textures", atlas_id, {key = name_of_our_new_texture_resource})

	-- Now we send a message to the gui script, telling it our initial setup is done,
	-- we also pass in the name here of the texture for ease.
	msg.post("#gui", "resource_loaded", {texture = name_of_our_new_texture_resource, number_of_images = #atlas_entries})
end
